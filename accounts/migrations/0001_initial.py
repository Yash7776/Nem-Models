# Generated by Django 5.2.1 on 2025-05-29 05:40

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Profile_header_all',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_id', models.CharField(max_length=20, unique=True)),
                ('profile_name', models.CharField(max_length=100)),
                ('pro_form_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), blank=True, default=list, help_text="List of accessible Form IDs like ['F_MAN_001', 'F_MAIN_002']", size=None)),
                ('pro_process_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), blank=True, default=list, help_text="List of accessible Process IDs like ['P_MAN_0001', 'P_DOC_0002']", size=None)),
                ('p_status', models.BooleanField(default=True)),
                ('pro_inserted_on', models.DateTimeField(auto_now_add=True)),
                ('pro_deactivated_on', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StateHeaderAll',
            fields=[
                ('st_id', models.AutoField(primary_key=True, serialize=False)),
                ('st_name', models.CharField(max_length=100)),
                ('st_inserted_on', models.DateTimeField(auto_now_add=True)),
                ('st_status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UniqueIdHeaderAll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=100)),
                ('id_for', models.CharField(max_length=50)),
                ('prefix', models.CharField(max_length=3)),
                ('last_id', models.CharField(max_length=15)),
                ('created_on', models.DateTimeField()),
                ('modified_on', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.department')),
            ],
        ),
        migrations.CreateModel(
            name='DistrictHeaderAll',
            fields=[
                ('dist_id', models.AutoField(primary_key=True, serialize=False)),
                ('dist_name', models.CharField(max_length=100)),
                ('inserted', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('st_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.stateheaderall')),
            ],
        ),
        migrations.CreateModel(
            name='TalukaHeaderAll',
            fields=[
                ('tal_id', models.AutoField(primary_key=True, serialize=False)),
                ('tal_name', models.CharField(max_length=100)),
                ('inserted', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('dist_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.districtheaderall')),
                ('st_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.stateheaderall')),
            ],
        ),
        migrations.CreateModel(
            name='VillageHeaderAll',
            fields=[
                ('vil_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('inserted', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('dist_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.districtheaderall')),
                ('st_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.stateheaderall')),
                ('tal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.talukaheaderall')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectLocationDetailsAll',
            fields=[
                ('pl_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_id', models.IntegerField()),
                ('pl_location_type', models.IntegerField(choices=[(1, 'State'), (2, 'District'), (3, 'Taluka'), (4, 'Village')])),
                ('inserted', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('dist_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.districtheaderall')),
                ('st_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.stateheaderall')),
                ('tal_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.talukaheaderall')),
                ('vil_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.villageheaderall')),
            ],
        ),
        migrations.CreateModel(
            name='User_header_all',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=15)),
                ('line_no', models.IntegerField(default=0)),
                ('full_name', models.CharField(max_length=150)),
                ('email', models.CharField(blank=True, max_length=150)),
                ('username', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=128)),
                ('mobile_no', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Mobile number must be 10 digits and start with 6, 7, 8, or 9.', regex='^[6-9]\\d{9}$')])),
                ('project_id', models.JSONField(default=dict)),
                ('user_type', models.IntegerField(choices=[(1, 'Platform owner'), (2, 'Department'), (3, 'Contractor')], default=1)),
                ('status', models.IntegerField(choices=[(1, 'Active'), (0, 'Inactive')], default=1)),
                ('inserted_on', models.DateTimeField(auto_now_add=True)),
                ('deactivated_on', models.DateTimeField(blank=True, null=True)),
                ('dist_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.districtheaderall')),
                ('profile_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_assignments', to='accounts.profile_header_all')),
                ('st_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.stateheaderall')),
                ('tal_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.talukaheaderall')),
                ('vil_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.villageheaderall')),
            ],
            options={
                'unique_together': {('user_id', 'line_no')},
            },
        ),
    ]
